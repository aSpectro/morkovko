import Command from './Command';
import { setEmbedAuthor } from './helpers';
import { AppService } from './../../app.service';

export class PugaloCommand extends Command {
  constructor(commandName: string) {
    super(commandName);
  }

  run(
    message: any,
    args: any,
    service: AppService,
    isSlash: boolean | undefined,
  ) {
    this.initCommand(message, args, service, isSlash, () => {
      const user = this.getUser();
      const { pugalo } = this.config.bot.economy;
      service.checkUser(user.id).then((res) => {
        if (res.status === 200) {
          const player = res.player;
          const price = this.getPrice(player.slotsCount, pugalo);
          if (player.points >= price && !player.hasPugalo) {
            player.hasPugalo = true;
            player.points -= price;
            service.savePlayer(player).then((resSave) => {
              if (resSave.status === 200) {
                this.embed.setDescription(
                  `–¢—ã –∫—É–ø–∏–ª –ø—É–≥–∞–ª–æ. –¢–µ–ø–µ—Ä—å —Ç–≤–æ—è —Ñ–µ—Ä–º–∞ –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç –º–∞—Ñ–∏–∏! –ù–æ –Ω–µ –∑–∞–±—ã–≤–∞–π —á—Ç–æ —Ç–≤–æ–π —Å–æ—Å–µ–¥ –≤–æ—Ä—É–µ—Ç —Ç–≤–æ–µ –ø—É–≥–∞–ª–æ –≤ –æ–±–µ–¥ –∏–ª–∏ –ø–æ–ª–Ω–æ—á—å.`,
                );
                this.send({
                  embeds: [setEmbedAuthor(this.embed, user)],
                });
              } else {
                this.embed.setDescription(
                  `–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∫—É–ø–∏—Ç—å –ø—É–≥–∞–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.`,
                );
                this.send({
                  embeds: [setEmbedAuthor(this.embed, user)],
                });
              }
            });
          } else {
            if (player.hasPugalo) {
              this.embed.setDescription(`–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –ø—É–≥–∞–ª–æ!`);
            } else {
              this.embed.setDescription(
                `–¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ${price - player.points}üî∏!`,
              );
            }
            this.send({
              embeds: [setEmbedAuthor(this.embed, user)],
            });
          }
        } else {
          this.replyNoUser(user);
        }
      });
    });
  }
}
