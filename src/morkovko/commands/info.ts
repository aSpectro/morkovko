import Command from './Command';
import * as moment from 'moment';
import {
  setEmbedAuthor,
  getTimeFromMins,
  calcNumberWithPercentBoost,
  abbreviateNumber,
} from './helpers';
import { AppService } from './../../app.service';
import { WarsService } from 'src/wars.service';

export class InfoCommand extends Command {
  constructor(
    commandName: string,
    needEvents: boolean,
    warsService?: WarsService,
  ) {
    super(commandName, needEvents, warsService);
  }

  run(
    message: any,
    args: any,
    service: AppService,
    isSlash: boolean | undefined,
  ) {
    this.initCommand(message, args, service, isSlash, () => {
      const user = this.getUser();
      service.checkUser(user.id).then((res) => {
        if (res.status === 200) {
          const player = res.player;
          const d1 = moment(player.lastWateringDate);
          const d2 = moment(new Date());
          const diff = d2.diff(d1, 'minutes');
          const needDiff = calcNumberWithPercentBoost(
            60,
            player.config.cooldowns.watering,
          );

          const d1Pray = moment(player.lastPrayDate);
          const d2Pray = moment(new Date());
          const diffPray = d2Pray.diff(d1Pray, 'minutes');
          const needDiffPray = calcNumberWithPercentBoost(
            1440,
            player.config.cooldowns.pray,
          );

          const d1A = moment(player.lastADate);
          const d2A = moment(new Date());
          const diffA = d2A.diff(d1A, 'minutes');
          const needDiffA = calcNumberWithPercentBoost(
            1440,
            player.config.cooldowns.adate,
          );

          let watering = '';
          let pray = '';
          let adate = '';
          let fair = 'üèï –¢—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ —è—Ä–º–∞—Ä–∫–µ!\n';
          let eventBonus = '';
          if (this.locale.name === 'halloween') {
            eventBonus = `–°–æ–±—ã—Ç–∏–µ **HALLOWEEN**, –¥–µ–π—Å—Ç–≤—É–µ—Ç –±–æ–Ω—É—Å –∑–∞ –ø—Ä–æ–¥–∞–∂—É üéÉ **x${this.locale.getBonus(true)}** –Ω–∞ —è—Ä–º–∞—Ä–∫–µ!\n`
          }
          if (this.locale.name === 'new_year') {
            eventBonus = `–°–æ–±—ã—Ç–∏–µ **–ù–æ–≤—ã–π –≥–æ–¥**, –¥–µ–π—Å—Ç–≤—É–µ—Ç –±–æ–Ω—É—Å –∑–∞ –ø—Ä–æ–¥–∞–∂—É üå≤ **x${this.locale.getBonus(true)}** –Ω–∞ —è—Ä–º–∞—Ä–∫–µ!\n`
          }

          if (player.config?.fair?.isActive) {
            const d1Fair = moment(player.config.fair.startDate);
            const d2Fair = moment(new Date());
            const diffFair = d2Fair.diff(d1Fair, 'minutes');
            const needDiffFair = 1440;

            if (diffFair < needDiffFair) {
              fair = `üèï –¢—ã –≤–µ—Ä–Ω–µ—à—å—Å—è —Å —è—Ä–º–∞—Ä–∫–∏ —á–µ—Ä–µ–∑ ${getTimeFromMins(
                needDiffFair - diffFair,
              )}\n`;
            }
          }

          if (diff >= needDiff) {
            watering = `üíß –ü–æ–ª–∏–≤ ${this.locale.getEnum('–º–æ—Ä–∫–æ–≤–∫–∏')} –¥–æ—Å—Ç—É–ø–µ–Ω.\n`;
          } else {
            watering = `üíß –¢—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª–∏—Ç—å ${this.locale.getEnum('–º–æ—Ä–∫–æ–≤–∫—É')} –Ω–µ —Ä–∞–Ω—å—à–µ —á–µ–º —á–µ—Ä–µ–∑ ${getTimeFromMins(
              needDiff - diff,
            )}\n`;
          }

          if (diffPray >= needDiffPray) {
            pray = 'üôè –ú–æ–ª–∏—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω–∞.\n';
          } else {
            pray = `üôè –¢—ã —Å–º–æ–∂–µ—à—å –ø–æ–º–æ–ª–∏—Ç—å—Å—è –Ω–µ —Ä–∞–Ω—å—à–µ —á–µ–º —á–µ—Ä–µ–∑ ${getTimeFromMins(
              needDiffPray - diffPray,
            )}\n`;
          }

          if (diffA >= needDiffA) {
            adate = 'üë®üèª‚Äçü§ù‚Äçüë®üèª –°–≤–∏–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ.\n';
          } else {
            adate = `üë®üèª‚Äçü§ù‚Äçüë®üèª –¢—ã —Å–º–æ–∂–µ—à—å —Å—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –Ω–µ —Ä–∞–Ω—å—à–µ —á–µ–º —á–µ—Ä–µ–∑ ${getTimeFromMins(
              needDiffA - diffA,
            )}\n`;
          }

          const gameTime = `–ò–≥—Ä–æ–≤–æ–µ –≤—Ä–µ–º—è: **${moment(new Date()).format(
            'HH:mm',
          )}**\n`;

          let exit = '';
          if (
            player.carrotSize >= this.getExitCarrotSize(player.progressBonus)
          ) {
            exit = `–ú–æ–∂–Ω–æ –≤—ã–∫—Ç–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å—ã!`;
          } else {
            exit = `–ß—Ç–æ–±—ã –≤—ã–∫—Ç–∏, –Ω—É–∂–Ω–æ –≤—ã—Ä–∞—Å—Ç–∏—Ç—å ${this.locale.getEnum('–º–æ—Ä–∫–æ–≤–∫—É')} –µ—â–µ –Ω–∞ **${abbreviateNumber(
              this.getExitCarrotSize(player.progressBonus) - player.carrotSize,
            )}—Å–º**`;
          }

          this.embed.setDescription(
            `${gameTime + eventBonus + watering + pray + adate + fair + exit}`,
          );
          this.send({ embeds: [setEmbedAuthor(this.embed, user)] });
        } else {
          this.replyNoUser(user);
        }
      });
    });
  }
}
